#! /usr/bin/env python

dirs = [
#    "plugins",
    "modules",
    ]


def options(ctx):
    ctx.load("compiler_c compiler_cxx")
    pass

def configure(ctx):
    ctx.load("compiler_c compiler_cxx")
    ctx.check_cfg(package='glib-2.0', args='--cflags --libs')
    ctx.env.CXXFLAGS = ['-std=c++11', '-Wall', "-g", "-rdynamic"]
    ctx.env.LINKFLAGS = []
    #TODO: absolute path
    #ctx.env.append_value('INCLUDES', ['../include'])
    # configure modules and plugins
    for d in dirs:
        ctx.recurse(d)
    pass

def build(ctx):
    # build feign executables
    src = ["main.cpp", "options.cpp", "plugins.cpp", "replay.cpp", "helper.cpp"]
    ctx(features="c cxx cxxprogram", source=src, target="feign", uselib=["GLIB-2.0"], lib=["dl", "rt"])
    # build modules and plugins
    for d in dirs:
        ctx.recurse(d)
    pass
